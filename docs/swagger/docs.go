// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers_auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers_auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers_auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/characters": {
            "get": {
                "description": "Get list of all available character types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "character"
                ],
                "summary": "Get all characters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gocionics_internal_entities.Character"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gocionics_internal_entities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/characters/{id}": {
            "get": {
                "description": "Get character details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "character"
                ],
                "summary": "Get character by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gocionics_internal_entities.Character"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gocionics_internal_entities.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gocionics_internal_entities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/characters/{character_id}": {
            "post": {
                "description": "Assign character to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Assign character to user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Character ID",
                        "name": "character_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gocionics_internal_entities.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gocionics_internal_entities.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gocionics_internal_entities.Character": {
            "description": "Socionics character type with traits and description",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Искатель, интуитивно-логический экстраверт"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "traits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "изобретательный",
                        "энтузиаст",
                        "непредсказуемый"
                    ]
                },
                "type": {
                    "type": "string",
                    "example": "Дон Кихот"
                }
            }
        },
        "gocionics_internal_entities.ErrorResponse": {
            "description": "Standard error response format",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "gocionics_internal_entities.SuccessResponse": {
            "description": "Standard success response format",
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "internal_controllers_auth.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "internal_controllers_auth.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "internal_controllers_auth.LoginResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Gocionics API",
	Description:      "API for Socionics Personality Typing",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
